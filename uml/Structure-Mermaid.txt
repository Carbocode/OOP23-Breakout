classDiagram   
    class BrickWall {        
        +void generateLayout()        
        +void resetLayout()             
        +void setHeight(int height)        
        +void setWidth(int width)        
        +int getHeight()        
        +int getWidth()        
        +Set~Brick~ getWall()    
    }    
    BrickWall ..|> BrickFactory

    class BrickFactory {        
        <<Service>>        
        +Brick createRandomBrick(Point position, Dimension size, Color color)        
        +Brick createImmortalBrick(Point position, Dimension size)        
        +void setSeed(long seed)        
        +long getSeed()    
    }

    class Brick {        
    }        
    BrickFactory ..|> Brick
    
    class BrickTypes {        
        <<Enumeretion>>         
        +int getHealth()        
        +static int getHealth(Random rand)        
        +int getOccurrence()    
    }        
    BrickFactory ..|> BrickTypes
    
    class BrickColors {        
        <<Enumeretion>>         
        +static Color getColor(int row)        
        +Color getColor()    
    }    
    BrickFactory ..|> BrickColors

    class GameLoop {
        +void addView(View gw)
        +void actionPerformed(ActionEvent e)
        +void update()
        +void multiplyBall(Ball old)
        +Set~Ball~ getBalls()
        +Set~Brick~ getBricks()
        +Bar getBar()
        +int getScore()
        +void increaseScore(int amount)
        +void extendPaddle()
        +void addBalls(List~Ball~ newBalls)
        +void handleKeyRelease(KeyEvent e)
        +void handleKeyPress(KeyEvent e)
        +GameLoopAccessor getAccessor()
    }
    GameLoop ..|> BrickWall

    class PowerUp {
        <<enumeration>>
        +double getProbability()
        +long getCooldownMillis()
        +int getCDInSecs()
        +boolean isOnCooldown()
        +void use()
    }
    GameLoop ..|> PowerUp

    class CollisionManager {
        +CollisionManager(GameLoop master)
        +void checkAll()
        +void handleEnlargePowerUp()
        +void bomb(GameEntity ball)
    }
    GameLoop ..|> CollisionManager

    class Ball {             
        +Direction getDirection()        
        +void update()        
        +void guidedCollision(int hitDirection)    
    }    
    GameLoop ..|> Ball

    class Bar {               
        +int getDirection()        
        +void setDirection(int d)        
        +void move()        
        +void setWidth(int newwidth)        
        +void buttonPressed(KeyEvent e)        
        +void buttonReleased(KeyEvent e)    
    }    
    GameLoop ..|> Bar

    class ScoreManager {
        +void increment(int points)
        +int getScore()
    }
     GameLoop ..|> ScoreManager

    class DeathCollector {
        +static void checkEntities(Set~GameEntity~ entities)
    }
     GameLoop ..|> DeathCollector