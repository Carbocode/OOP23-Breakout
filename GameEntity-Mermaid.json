[{"state":{"code":"classDiagram\n\n    class GameEntity {\n        <<interface>>\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n    \n\n    class GameEntityImpl {\n        <<abstract>>\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity : implements\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl : extends\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n    }\n    Bar ..|> GameEntityImpl : extends\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n    }\n    Brick ..|> GameEntityImpl : extends","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743674460,"type":"manual","id":"a63ae3d1-7e4c-439a-92b2-6f8c5aabc5cc","name":"squeaking-flower"},{"state":{"code":"classDiagram\n\n    class GameEntity {\n        <<interface>>\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n    \n\n    class GameEntityImpl {\n        <<abstract>>\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity : implements\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl : extends\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n    }\n    Bar ..|> GameEntityImpl : extends\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +boolean equals(Object o)\n        +int hashCode()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl : extends","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743625374,"type":"auto","id":"844d939f-4973-4571-9b08-97cea2cd01b4","name":"alive-carpenter"},{"state":{"code":"classDiagram\n\n    class GameEntity {\n        <<interface>>\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n    \n\n    class GameEntityImpl {\n        <<abstract>>\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n    \n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity : implements\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl : extends\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl : extends\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl : extends","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743565372,"type":"auto","id":"6ed5cb82-e0df-49b0-986d-a79c8313e559","name":"damp-chef"},{"state":{"code":"classDiagram\n\n    class GameEntity {\n        <<interface>>\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n    \n\n    class GameEntityImpl {\n        <<abstract>>\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743445364,"type":"auto","id":"8c67a009-fa2e-4999-ae8d-5274b1a2377b","name":"savory-uganda"},{"state":{"code":"classDiagram\n\n    class GameEntity {\n        <<interface>>\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n    \n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"light\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743385363,"type":"auto","id":"d79c6bca-7f17-4a2f-9cd4-56c9535ebbaa","name":"some-ocean"},{"state":{"code":"classDiagram\n    class GameEntity \n    <<interface>> GameEntity{\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"light\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743325357,"type":"auto","id":"6af254a4-7a7b-4ffb-9caf-d1bf19d7df4b","name":"able-planet"},{"state":{"code":"classDiagram\n    class GameEntity {\n        <<Interface>> GameEntity\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"light\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743265352,"type":"auto","id":"512dc613-e0e3-4659-8d4c-967f32e129fb","name":"magnificent-zoo"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"light\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743204958,"type":"auto","id":"b0841491-9f73-469d-9e51-b8cc9cb911a4","name":"nervous-engine"},{"state":{"code":"erDiagram\n    CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n    CUSTOMER ||--o{ ORDER : places\n    CUSTOMER ||--o{ INVOICE : \"liable for\"\n    DELIVERY-ADDRESS ||--o{ ORDER : receives\n    INVOICE ||--|{ ORDER : covers\n    ORDER ||--|{ ORDER-ITEM : includes\n    PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n    PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":true,"editorMode":"code","panZoom":false},"time":1719743144179,"type":"auto","id":"9181fa35-bf94-42be-9340-13c788cc59b2","name":"abnormal-gpu"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        #static long serialVersionUID\n        #static Dimension BALL_DIMENSION\n        #static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        #static long serialVersionUID\n        #static int LEFT_VALUE\n        #static int RIGHT_VALUE\n        #static int STOP_VALUE\n        #static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        #static long serialVersionUID\n        #static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743111481,"type":"manual","id":"07c8501b-70ac-451f-9c68-904092d477c2","name":"great-telephone"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        #static int IMMORTAL_ENTITY_HEALTH\n        #static int MIN_HEALTH\n        #static int MAX_HEALTH\n        #static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        # static long serialVersionUID\n        # static Dimension BALL_DIMENSION\n        # static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        # static long serialVersionUID\n        # static int LEFT_VALUE\n        # static int RIGHT_VALUE\n        # static int STOP_VALUE\n        # static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        # static long serialVersionUID\n        # static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743084174,"type":"auto","id":"70ec63ce-89d2-4828-9e42-dfcfd3313458","name":"full-zoo"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        - Point position\n        - Dimension size\n        - int health\n        - Color color\n        # static int IMMORTAL_ENTITY_HEALTH\n        # static int MIN_HEALTH\n        # static int MAX_HEALTH\n        # static Color DEFAULT_COLOR\n        + boolean isAlive()\n        + void setPosition(Point position)\n        + void setSize(Dimension size)\n        + void setHealth(int health)\n        + void setColor(Color color)\n        + Point getPosition()\n        + Dimension getSize()\n        + int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl ..|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        # static long serialVersionUID\n        # static Dimension BALL_DIMENSION\n        # static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball |> GameEntityImpl\n\n    class Bar {\n        -int direction\n        # static long serialVersionUID\n        # static int LEFT_VALUE\n        # static int RIGHT_VALUE\n        # static int STOP_VALUE\n        # static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar --|> GameEntityImpl\n\n    class Brick {\n        # static long serialVersionUID\n        # static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick --|> GameEntityImpl","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719743024170,"type":"auto","id":"6ad4a9cc-8279-45a1-b43c-c481ac2bf023","name":"low-airline"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        - Point position\n        - Dimension size\n        - int health\n        - Color color\n        # static int IMMORTAL_ENTITY_HEALTH\n        # static int MIN_HEALTH\n        # static int MAX_HEALTH\n        # static Color DEFAULT_COLOR\n        + boolean isAlive()\n        + void setPosition(Point position)\n        + void setSize(Dimension size)\n        + void setHealth(int health)\n        + void setColor(Color color)\n        + Point getPosition()\n        + Dimension getSize()\n        + int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        # static long serialVersionUID\n        # static Dimension BALL_DIMENSION\n        # static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball --|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        # static long serialVersionUID\n        # static int LEFT_VALUE\n        # static int RIGHT_VALUE\n        # static int STOP_VALUE\n        # static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar --|> GameEntityImpl\n\n    class Brick {\n        # static long serialVersionUID\n        # static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick --|> GameEntityImpl","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719742964169,"type":"auto","id":"0ab865fa-70a6-4bd2-96a7-c109233412af","name":"future-fireman"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        # static int IMMORTAL_ENTITY_HEALTH\n        # static int MIN_HEALTH\n        # static int MAX_HEALTH\n        # static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl --|> GameEntity\n\n    class Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        # static long serialVersionUID\n        # static Dimension BALL_DIMENSION\n        # static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball --|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        # static long serialVersionUID\n        # static int LEFT_VALUE\n        # static int RIGHT_VALUE\n        # static int STOP_VALUE\n        # static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar --|> GameEntityImpl\n\n    class Brick {\n        # static long serialVersionUID\n        # static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick --|> GameEntityImpl","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1719742903505,"type":"auto","id":"0bb8516f-b454-4a0a-bcb5-ae3192c85501","name":"adorable-juice"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        # static int IMMORTAL_ENTITY_HEALTH\n        # static int MIN_HEALTH\n        # static int MAX_HEALTH\n        # static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl ..|> GameEntity\n\nclass Ball {\n        -Direction dir\n        -Random rand\n        -SoundManager sound\n        # static long serialVersionUID\n        # static Dimension BALL_DIMENSION\n        # static Point START_POINT\n        +Direction getDirection()\n        +void update()\n        +void onCollision()\n        +void guidedCollision(int hitDirection)\n    }\n    Ball ..|> GameEntityImpl\n\n    class Bar {\n        -int direction\n        # static long serialVersionUID\n        # static int LEFT_VALUE\n        # static int RIGHT_VALUE\n        # static int STOP_VALUE\n        # static float MOVE_VALUE\n        +int getDirection()\n        +void setDirection(int d)\n        +void move()\n        +void setWidth(int newwidth)\n        +void buttonPressed(KeyEvent e)\n        +void buttonReleased(KeyEvent e)\n        +void onCollision()\n    }\n    Bar ..|> GameEntityImpl\n\n    class Brick {\n        # static long serialVersionUID\n        # static double ASPECT_RATIO\n        +void onCollision()\n        +boolean isAlive()\n        +void setHealth(int health)\n        +int getHealth()\n        +boolean equals(Object o)\n        +int hashCode()\n        +Point getPosition()\n        +Dimension getSize()\n        +String toString()\n    }\n    Brick ..|> GameEntityImpl","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":true,"editorMode":"code","panZoom":false},"time":1719742721345,"type":"auto","id":"e8126a11-1df8-49be-9f5a-f427b5d617c8","name":"whispering-adult"},{"state":{"code":"classDiagram\n    class GameEntity {\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n    }\n\n    class GameEntityImpl {\n        -Point position\n        -Dimension size\n        -int health\n        -Color color\n        # static int IMMORTAL_ENTITY_HEALTH\n        # static int MIN_HEALTH\n        # static int MAX_HEALTH\n        # static Color DEFAULT_COLOR\n        +boolean isAlive()\n        +void setPosition(Point position)\n        +void setSize(Dimension size)\n        +void setHealth(int health)\n        +void setColor(Color color)\n        +Point getPosition()\n        +Dimension getSize()\n        +int getHealth()\n        +Color getColor()\n        +void onCollision()\n        +String toString()\n        +boolean equals(Object o)\n        +int hashCode()\n    }\n    GameEntityImpl ..|> GameEntity\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1719742661343,"type":"auto","id":"b67aa13a-0f6a-4409-bd53-cac3cfefa090","name":"scary-car"}]